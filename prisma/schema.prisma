generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Modelos da entidade Instituicao
model Instituicao {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  cnpj         String   @unique
  contact      String
  description  String
  localization Json  

  
  createdBy User   @relation(fields: [createdById], references: [id])
  createdById String @db.ObjectId

  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

// NOVO MODELO: Comentario
model Comentario {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String

  // Relação com o autor do comentário
  author    User     @relation("UserComentarios", fields: [authorId], references: [id])
  authorId  String   @db.ObjectId

  // Relação com o conteúdo que está sendo comentado
  conteudo  ConteudoEducativo @relation("ConteudoComentarios", fields: [conteudoId], references: [id])
  conteudoId String  @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// NOVO MODELO: ConteudoEducativo
model ConteudoEducativo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  imageUrl  String? // URL para uma imagem (opcional)
  linkUrl   String? // Link para um artigo/vídeo externo (opcional)

  author    User     @relation("UserConteudos", fields: [authorId], references: [id])
  authorId  String   @db.ObjectId

  comentarios Comentario[] @relation("ConteudoComentarios")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
// Modelos da entidade User 
enum Role {
  user
  healthcare
  admin
  admin_master
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  role     Role   @default(user)

  instituicoes Instituicao[]
  relatos Relato[]
  comentarios    Comentario[]        @relation("UserComentarios")
  conteudos      ConteudoEducativo[] @relation("UserConteudos")
}

// Modelos da entidade Relato
model Relato {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  likes     Int      @default(0)

  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
